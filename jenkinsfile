pipeline {
	agent any
	tools {
		maven 'maven'
	}
	stages {
		stage('clone-repo'){
			steps {
				checkout scm
			}
		}
		stage('Build') {
			steps {
				sh 'mvn clean install'
			}
		}
		stage('sonarqube-scanging'){
			steps {
				withSonarQubeEnv('my-sonarqube-server') {
					sh 'mvn sonar:sonar'
				}
			}
		}
		stage('quality-gate-check'){
			steps {
				sh 'sleep 30s'
				waitForQualityGate abortPipeline: true
			}
		}
		stage('Upload to Artifactory') {
            steps {
                script {
                    // Define Artifactory upload specifics
                    def server = Artifactory.server 'jfrog-instance'
                    def uploadSpec = """{
                        "files": [
                            {
                                "pattern": "target/*.war",
                                "target": "online-bookstore/${BUILD_TIMESTAMP}/"
                            }
                        ]
                    }"""
                    server.upload(uploadSpec)
                }
            }
        }
		

	}
}		
